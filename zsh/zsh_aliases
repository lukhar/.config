[ "$HOST" = 'piecyk' ] && alias ls='ls --color=auto'
[ "$HOST" = 'grapebox' ] && alias ls='ls -G'

# ugly fix for bold fonts in tmux
[ "$HOST" = 'piecyk' ] && alias tmux='TERM=xterm-256color /usr/bin/tmux'

[ -x "$(command -v bat)" ] && alias cat=bat

# load machine specific aliases
[ -f $HOME/.localrc ] && source $HOME/.localrc

alias sr='source ~/.zsh_aliases'

alias ll='ls -lh'
alias la='ls -lAh'
alias l='ls -CFh'
alias gradle='gradle --console rich'

# git aliases
alias g='git add -p'
alias ga='git add '
alias gc='git commit'
alias gch='git checkout'
alias gp='git push'
alias gcl='git branch  | grep -v master | xargs -I {} git branch -D {} && git fetch --prune'
alias grep='grep --color=auto'
alias gs='git status'
alias gw='git add -p && git commit && git pull && git push'

alias lvim='NVIM_APPNAME="nvim-lua" nvim'

function fe() {
  IFS=$'\n' files=($(fzf --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

function fcd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

function fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}

function fdr() {
  local declare dirs=()
  get_parent_dirs() {
    if [[ -d "${1}" ]]; then dirs+=("$1"); else return; fi
    if [[ "${1}" == '/' ]]; then
      for _dir in "${dirs[@]}"; do echo $_dir; done
    else
      get_parent_dirs $(dirname "$1")
    fi
  }
  local DIR=$(get_parent_dirs $(realpath "${1:-$PWD}") | fzf-tmux --tac)
  cd "$DIR"
}

function fkill() {
  pid=$(ps aux | fzf -q "$1" --multi --header-lines=1 | awk '{print $2}')  && kill $pid
}

function tm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

function tp() {
  local panes current_window current_pane target target_window target_pane
  panes=$(tmux list-panes -s -F '#I:#P - #{pane_current_path} #{pane_current_command}')
  current_pane=$(tmux display-message -p '#I:#P')
  current_window=$(tmux display-message -p '#I')

  target=$(echo "$panes" | grep -v "$current_pane" | fzf +m --reverse) || return

  target_window=$(echo $target | awk 'BEGIN{FS=":|-"} {print$1}')
  target_pane=$(echo $target | awk 'BEGIN{FS=":|-"} {print$2}' | cut -c 1)

  if [[ $current_window -eq $target_window ]]; then
    tmux select-pane -t ${target_window}.${target_pane}
  else
    tmux select-pane -t ${target_window}.${target_pane} &&
    tmux select-window -t $target_window
  fi
}

timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do time ($shell -i -c exit); done
}

alias pip-upgrade="pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"
